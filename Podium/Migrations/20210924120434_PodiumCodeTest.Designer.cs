// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Podium.Data;

namespace Podium.Migrations
{
    [DbContext(typeof(PodiumDbContext))]
    [Migration("20210924120434_PodiumCodeTest")]
    partial class PodiumCodeTest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("PodiumCodeTest.Data.Entities.Applicant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("PodiumCodeTest.Data.Entities.MortgageProposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MortgageRequirementId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MortgageRequirementId");

                    b.ToTable("MortgageProposals");
                });

            modelBuilder.Entity("PodiumCodeTest.Data.Entities.MortgageProposalProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MortgageProposalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MortgageProposalId");

                    b.HasIndex("ProductId");

                    b.ToTable("MortgageProposalProduct");
                });

            modelBuilder.Entity("PodiumCodeTest.Data.Entities.MortgageRequirement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DepositAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PropertyValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("MortgageRequirements");
                });

            modelBuilder.Entity("PodiumCodeTest.Data.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Lender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LoanToValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoanType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("105f98ce-8780-47a0-b503-53d9805a3da7"),
                            InterestRate = 0.02m,
                            Lender = "Bank A",
                            LoanToValue = 0.6m,
                            LoanType = 1
                        },
                        new
                        {
                            Id = new Guid("9332c814-4362-4632-a5b9-2bd6f76a5f08"),
                            InterestRate = 0.03m,
                            Lender = "Bank B",
                            LoanToValue = 0.6m,
                            LoanType = 0
                        },
                        new
                        {
                            Id = new Guid("7f9337a8-4ccb-4aae-90d8-47f9eae022b0"),
                            InterestRate = 0.04m,
                            Lender = "Bank C",
                            LoanToValue = 0.9m,
                            LoanType = 1
                        });
                });

            modelBuilder.Entity("PodiumCodeTest.Data.Entities.MortgageProposal", b =>
                {
                    b.HasOne("PodiumCodeTest.Data.Entities.MortgageRequirement", "MortgageRequirement")
                        .WithMany()
                        .HasForeignKey("MortgageRequirementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MortgageRequirement");
                });

            modelBuilder.Entity("PodiumCodeTest.Data.Entities.MortgageProposalProduct", b =>
                {
                    b.HasOne("PodiumCodeTest.Data.Entities.MortgageProposal", "MortgageProposal")
                        .WithMany("Products")
                        .HasForeignKey("MortgageProposalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PodiumCodeTest.Data.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MortgageProposal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PodiumCodeTest.Data.Entities.MortgageRequirement", b =>
                {
                    b.HasOne("PodiumCodeTest.Data.Entities.Applicant", "Applicant")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("PodiumCodeTest.Data.Entities.MortgageProposal", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
