@page "/mortgage"
@inject HttpClient Http

<h2>Mortgage Requirments</h2>
<hr />
<EditForm Model="@model" OnValidSubmit="PostMortgageRequirments">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>ApplicantId</label>
        <InputText @bind-Value="model.ApplicantId" class="form-control" />
        <ValidationMessage For="@(() => model.ApplicantId)" />
    </div>
    <div class="form-group">
        <label>DepositAmount</label>
        <InputNumber @bind-Value="model.DepositAmount" type="DepositAmount" class="form-control" />
        <ValidationMessage For="@(() => model.DepositAmount)" />
    </div>
    <div class="form-group">
        <label>PropertyValue</label>
        <InputNumber @bind-Value="model.PropertyValue" type="PropertyValue" class="form-control" />
        <ValidationMessage For="@(() => model.PropertyValue)" />
    </div>
    <button disabled="@loading" class="btn btn-primary">
        @if (loading)
        {
            <span class="spinner-border spinner-border-sm mr-1"></span>
        }
        Get Mortgage Proposals
    </button>
</EditForm>

@if (mortgageProposal != null)
{
    <h3>Availible Products</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Lender</th>
                <th>Intrest Rate</th>
                <th>Fixed/Variable</th>
                <th>Loan to value</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in mortgageProposal.Products)
             {
                <tr>
                    <td>@product.Product.Lender</td>
                    <td>@product.Product.InterestRate</td>
                    <td>@product.Product.LoanType</td>
                    <td>@product.Product.LoanToValue</td>
                </tr>
             }
        </tbody>
    </table>
}

@code {
    private Models.MortgageRequirements model = new Models.MortgageRequirements();
    private PodiumWeb.Dtos.MortgageProposalDto mortgageProposal;
    private bool loading;

    private async void PostMortgageRequirments()
    {
        try
        {
            loading = true;
            using var response = await Http.PostAsJsonAsync("Mortgage", model);
            loading = false;
            mortgageProposal = await response.Content.ReadFromJsonAsync<PodiumWeb.Dtos.MortgageProposalDto>();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            loading = false;
            StateHasChanged();
        }
    }
}